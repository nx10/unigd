[{"path":"https://nx10.github.io/unigd/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Florian Rupprecht. Author, maintainer. Kun Ren. Contributor. Jeroen Ooms. Contributor. Hadley Wickham. Copyright holder.            Author included svglite code Lionel Henry. Copyright holder.            Author included svglite code Thomas Lin Pedersen. Copyright holder.            Author creator included svglite code T Jake Luciani. Copyright holder.            Author included svglite code Matthieu Decorde. Copyright holder.            Author included svglite code Vaudor Lise. Copyright holder.            Author included svglite code Tony Plate. Copyright holder.            Contributor included svglite code David Gohel. Copyright holder.            Contributor included svglite code Yixuan Qiu. Copyright holder.            Contributor included svglite code Håkon Malmedal. Copyright holder.            Contributor included svglite code RStudio. Copyright holder.            Copyright holder included svglite code Brett Robinson. Copyright holder.            Author included belle library Google. Copyright holder.            Copyright holder included material design icons Victor Zverovich. Copyright holder.            Author included fmt library","code":""},{"path":"https://nx10.github.io/unigd/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rupprecht F (2022). unigd: Universal graphics device. https://github.com/nx10/unigd, https://nx10.github.io/unigd/.","code":"@Manual{,   title = {unigd: Universal graphics device},   author = {Florian Rupprecht},   year = {2022},   note = {https://github.com/nx10/unigd, https://nx10.github.io/unigd/}, }"},{"path":"https://nx10.github.io/unigd/index.html","id":"unigd","dir":"","previous_headings":"","what":"Universal graphics device","title":"Universal graphics device","text":"unified R graphics backend. Render R graphics fast easy file format. package provides thread-safe interface power interactive graphics clients httpgd.","code":""},{"path":"https://nx10.github.io/unigd/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Universal graphics device","text":"Helper functions make code concise:","code":"library(unigd)  ugd() # Start a unigd device  plot(1, main=\"Anything\") # Plot something  ugd_save(\"my_plot.svg\") # Save a SVG... ugd_save(\"my_plot.png\") # ...and a PNG.  cat(ugd_render(as=\"svg\")) # Or print the SVG (without ever creating a file)  dev.off() # Close the device ugd_save_inline({     plot(1, main=\"Anything\") }, \"my_plot.png\")"},{"path":"https://nx10.github.io/unigd/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Universal graphics device","text":"can install development version unigd GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"nx10/unigd\")"},{"path":"https://nx10.github.io/unigd/reference/ugd.html","id":null,"dir":"Reference","previous_headings":"","what":"Asynchronous HTTP server graphics device. — ugd","title":"Asynchronous HTTP server graphics device. — ugd","text":"function initializes unigd graphics device starts local webserver, allows access via HTTP WebSockets. link printed web client can accessed using browser.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Asynchronous HTTP server graphics device. — ugd","text":"","code":"ugd(   width = getOption(\"unigd.width\", 720),   height = getOption(\"unigd.height\", 576),   bg = getOption(\"unigd.bg\", \"white\"),   pointsize = getOption(\"unigd.pointsize\", 12),   system_fonts = getOption(\"unigd.system_fonts\", list()),   user_fonts = getOption(\"unigd.user_fonts\", list()),   reset_par = getOption(\"unigd.reset_par\", FALSE) )"},{"path":"https://nx10.github.io/unigd/reference/ugd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Asynchronous HTTP server graphics device. — ugd","text":"width Graphics device width (pixels). height Graphics device height (pixels). bg Background color. pointsize Graphics device point size. system_fonts Named list font names aliased fonts installed system. unspecified, R default families sans, serif, mono symbol aliased family returned systemfonts::font_info(). user_fonts Named list fonts aliased font files provided user rather fonts properly installed system. aliases can fonts fontquiver package, strings containing path font file, list containing name file elements name indicating font alias SVG output file path font file. reset_par set TRUE, global graphics parameters saved device start reset every time ugd_clear() called (see graphics::par()).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Asynchronous HTTP server graphics device. — ugd","text":"return value, called initialize graphics device.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Asynchronous HTTP server graphics device. — ugd","text":"font settings descriptions adopted excellent 'svglite' package.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Asynchronous HTTP server graphics device. — ugd","text":"","code":"if (FALSE) {  ugd() # Initialize graphics device and start server ugd_browse() # Or copy the displayed link in the browser  # Plot something x <- seq(0, 3 * pi, by = 0.1) plot(x, sin(x), type = \"l\")  dev.off() # alternatively: ugd_close() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear all unigd plot pages. — ugd_clear","title":"Clear all unigd plot pages. — ugd_clear","text":"function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear all unigd plot pages. — ugd_clear","text":"","code":"ugd_clear(which = dev.cur())"},{"path":"https://nx10.github.io/unigd/reference/ugd_clear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear all unigd plot pages. — ugd_clear","text":"device (ID).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_clear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear all unigd plot pages. — ugd_clear","text":"Whether pages remove.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_clear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear all unigd plot pages. — ugd_clear","text":"","code":"if (FALSE) {  ugd() plot(1, 1) hist(rnorm(100)) ugd_clear() hist(rnorm(100))  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_close.html","id":null,"dir":"Reference","previous_headings":"","what":"Close unigd device. — ugd_close","title":"Close unigd device. — ugd_close","text":"achieves effect grDevices::dev.(), close device unigd type.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_close.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close unigd device. — ugd_close","text":"","code":"ugd_close(which = dev.cur(), all = FALSE)"},{"path":"https://nx10.github.io/unigd/reference/ugd_close.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close unigd device. — ugd_close","text":"device (ID). running unigd devices closed.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_close.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close unigd device. — ugd_close","text":"Number name new active device (specified device shut ).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_close.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Close unigd device. — ugd_close","text":"","code":"if (FALSE) {  ugd() ugd_browse() # open browser hist(rnorm(100)) ugd_close() # Equvalent to dev.off()  ugd() ugd() ugd() ugd_close(all = TRUE) }"},{"path":"https://nx10.github.io/unigd/reference/ugd_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Query unigd plot IDs — ugd_id","title":"Query unigd plot IDs — ugd_id","text":"Query unigd graphics device static plot IDs. Available plot IDs starting index returned. limit specifies number plots. function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query unigd plot IDs — ugd_id","text":"","code":"ugd_id(index = 0, limit = 1, which = dev.cur(), state = FALSE)"},{"path":"https://nx10.github.io/unigd/reference/ugd_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query unigd plot IDs — ugd_id","text":"index Plot index. set 0, last page selected. limit Limit number returned IDs. set value > 1 returned type list IDs. device (ID). state Include current device state returned result (see also: ugd_state()).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query unigd plot IDs — ugd_id","text":"TODO","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query unigd plot IDs — ugd_id","text":"","code":"if (FALSE) {  ugd() plot.new() text(.5, .5, \"#1\") plot.new() text(.5, .5, \"#2\") plot.new() text(.5, .5, \"#3\") third <- ugd_id() second <- ugd_id(2) all <- ugd_id(1, limit = Inf) ugd_remove(1) ugd_plot(second)  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_info.html","id":null,"dir":"Reference","previous_headings":"","what":"unigd device information. — ugd_info","title":"unigd device information. — ugd_info","text":"Access general information unigd graphics device. function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unigd device information. — ugd_info","text":"","code":"ugd_info(which = dev.cur())"},{"path":"https://nx10.github.io/unigd/reference/ugd_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unigd device information. — ugd_info","text":"device (ID).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unigd device information. — ugd_info","text":"List status variables following named items: $id: Server unique ID, $version: unigd library versions.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unigd device information. — ugd_info","text":"","code":"if (FALSE) {  ugd() ugd_info()  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_remove.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a unigd plot page. — ugd_remove","title":"Remove a unigd plot page. — ugd_remove","text":"function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_remove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a unigd plot page. — ugd_remove","text":"","code":"ugd_remove(page = 0, which = dev.cur())"},{"path":"https://nx10.github.io/unigd/reference/ugd_remove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a unigd plot page. — ugd_remove","text":"page Plot page remove. set 0, last page selected. Can set numeric plot index plot ID (see ugd_id()). device (ID).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_remove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a unigd plot page. — ugd_remove","text":"Whether page existed (thereby successfully removed).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_remove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove a unigd plot page. — ugd_remove","text":"","code":"if (FALSE) {  ugd() plot(1, 1) # page 1 hist(rnorm(100)) # page 2 ugd_remove(page = 1) # remove page 1  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_render.html","id":null,"dir":"Reference","previous_headings":"","what":"Render unigd plot and return it. — ugd_render","title":"Render unigd plot and return it. — ugd_render","text":"See ugd_save() saving rendered plots files. function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render unigd plot and return it. — ugd_render","text":"","code":"ugd_render(   page = 0,   width = -1,   height = -1,   zoom = 1,   as = \"svg\",   which = dev.cur() )"},{"path":"https://nx10.github.io/unigd/reference/ugd_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render unigd plot and return it. — ugd_render","text":"page Plot page render. set 0, last page selected. Can set numeric plot index plot ID (see ugd_id()). width Width plot. set -1, last width selected. height Height plot. set -1, last height selected. zoom Zoom level. (example: 2 corresponds 200%, 0.5 50%.) Renderer. device (ID).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_render.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render unigd plot and return it. — ugd_render","text":"Rendered plot. Text renderers return strings, binary renderers return byte arrays.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_render.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render unigd plot and return it. — ugd_render","text":"","code":"if (FALSE) {  ugd() plot(1, 1) ugd_render(width = 600, height = 400, as = \"svg\")  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_render_inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline plot rendering. — ugd_render_inline","title":"Inline plot rendering. — ugd_render_inline","text":"Convenience function quick inline plot rendering. similar ugd_render() plotting code specified inline unigd graphics device managed (created closed) automatically. Starting device ugd() therefore necessary.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_render_inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline plot rendering. — ugd_render_inline","text":"","code":"ugd_render_inline(   code,   page = 0,   width = getOption(\"unigd.width\", 720),   height = getOption(\"unigd.height\", 576),   zoom = 1,   as = \"svg\",   ... )"},{"path":"https://nx10.github.io/unigd/reference/ugd_render_inline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline plot rendering. — ugd_render_inline","text":"code Plotting code. See examples information. page Plot page render. set 0, last page selected. Can set numeric plot index plot ID (see ugd_id()). width Width plot. height Height plot. zoom Zoom level. (example: 2 corresponds 200%, 0.5 50%.) Renderer. ... Additional parameters passed ugd(...)","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_render_inline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inline plot rendering. — ugd_render_inline","text":"Rendered plot. Text renderers return strings, binary renderers return byte arrays.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_render_inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline plot rendering. — ugd_render_inline","text":"","code":"if (FALSE) {  ugd_render_inline({   hist(rnorm(100)) }, as = \"svgz\")  s <- ugd_render_inline({   plot.new()   lines(c(0.5, 1, 0.5), c(0.5, 1, 1)) }) cat(s) }"},{"path":"https://nx10.github.io/unigd/reference/ugd_renderers.html","id":null,"dir":"Reference","previous_headings":"","what":"unigd device renderers. — ugd_renderers","title":"unigd device renderers. — ugd_renderers","text":"Get list available renderers. function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_renderers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unigd device renderers. — ugd_renderers","text":"","code":"ugd_renderers()"},{"path":"https://nx10.github.io/unigd/reference/ugd_renderers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unigd device renderers. — ugd_renderers","text":"List renderers following named items: $id: Renderer ID, $mime: File mime type, $ext: File extension, $name: Human readable name, $type: Renderer type (currently either plot ), $bin: file binary blob text.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_renderers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unigd device renderers. — ugd_renderers","text":"","code":"ugd_renderers() #>        id             mime   ext          name type  text #> 1   svgzp    image/svg+xml .svgz Portable SVGZ plot FALSE #> 2    svgz    image/svg+xml .svgz          SVGZ plot FALSE #> 3    meta application/json .json          Meta data  TRUE #> 4    tikz       text/plain  .tex          TikZ plot  TRUE #> 5    json application/json .json          JSON plot  TRUE #> 6 strings       text/plain  .txt       Strings data  TRUE #> 7    svgp    image/svg+xml  .svg  Portable SVG plot  TRUE #> 8     svg    image/svg+xml  .svg           SVG plot  TRUE #>                                                       descr #> 1 Version of the SVG renderer that produces portable SVGZs. #> 2               Compressed Scalable Vector Graphics (SVGZ). #> 3                                    Plot meta information. #> 4                                          LaTeX TikZ code. #> 5                      Plot data serialized to JSON format. #> 6                        List of strings contained in plot. #> 7  Version of the SVG renderer that produces portable SVGs. #> 8                           Scalable Vector Graphics (SVG)."},{"path":"https://nx10.github.io/unigd/reference/ugd_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Render unigd plot to a file. — ugd_save","title":"Render unigd plot to a file. — ugd_save","text":"See ugd_render() acessing plot data directly memory without saving file. function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render unigd plot to a file. — ugd_save","text":"","code":"ugd_save(   file,   page = 0,   width = -1,   height = -1,   zoom = 1,   as = \"auto\",   which = dev.cur() )"},{"path":"https://nx10.github.io/unigd/reference/ugd_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render unigd plot to a file. — ugd_save","text":"file Filepath save plot. page Plot page render. set 0, last page selected. Can set numeric plot index plot ID (see ugd_id()). width Width plot. set -1, last width selected. height Height plot. set -1, last height selected. zoom Zoom level. (example: 2 corresponds 200%, 0.5 50%.) Renderer. set \"auto\" renderer inferred file extension. device (ID).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render unigd plot to a file. — ugd_save","text":"Rendered SVG string.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render unigd plot to a file. — ugd_save","text":"","code":"if (FALSE) {  ugd() plot(1, 1) ugd_save(file = tempfile(), width = 600, height = 400, as = \"png\")  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_save_inline.html","id":null,"dir":"Reference","previous_headings":"","what":"Inline plot rendering to a file. — ugd_save_inline","title":"Inline plot rendering to a file. — ugd_save_inline","text":"Convenience function quick inline plot rendering. similar ugd_save() plotting code specified inline unigd graphics device managed (created closed) automatically. Starting device ugd() therefore necessary.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_save_inline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inline plot rendering to a file. — ugd_save_inline","text":"","code":"ugd_save_inline(   code,   file,   page = 0,   width = getOption(\"unigd.width\", 720),   height = getOption(\"unigd.height\", 576),   zoom = 1,   as = \"auto\",   ... )"},{"path":"https://nx10.github.io/unigd/reference/ugd_save_inline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inline plot rendering to a file. — ugd_save_inline","text":"code Plotting code. See examples information. file Filepath save plot. page Plot page render. set 0, last page selected. Can set numeric plot index plot ID (see ugd_id()). width Width plot. height Height plot. zoom Zoom level. (example: 2 corresponds 200%, 0.5 50%.) Renderer. ... Additional parameters passed ugd(...)","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_save_inline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inline plot rendering to a file. — ugd_save_inline","text":"","code":"if (FALSE) {  ugd_save_inline({   plot.new()   lines(c(0.5, 1, 0.5), c(0.5, 1, 1)) }, file = \"plot.svg\") }"},{"path":"https://nx10.github.io/unigd/reference/ugd_state.html","id":null,"dir":"Reference","previous_headings":"","what":"unigd device status. — ugd_state","title":"unigd device status. — ugd_state","text":"Access status information unigd graphics device. function work starting device ugd().","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"unigd device status. — ugd_state","text":"","code":"ugd_state(which = dev.cur())"},{"path":"https://nx10.github.io/unigd/reference/ugd_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"unigd device status. — ugd_state","text":"device (ID).","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"unigd device status. — ugd_state","text":"List status variables following named items: $hsize: Plot history size (many plots accessible), $upid: Update ID (changes device received new information), $active: device currently activated device.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"unigd device status. — ugd_state","text":"","code":"if (FALSE) {  ugd() ugd_state() plot(1, 1) ugd_state()  dev.off() }"},{"path":"https://nx10.github.io/unigd/reference/ugd_test_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a test pattern that can be used to evaluate and compare graphics\ndevices. — ugd_test_pattern","title":"Plot a test pattern that can be used to evaluate and compare graphics\ndevices. — ugd_test_pattern","text":"Plot test pattern can used evaluate compare graphics devices.","code":""},{"path":"https://nx10.github.io/unigd/reference/ugd_test_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a test pattern that can be used to evaluate and compare graphics\ndevices. — ugd_test_pattern","text":"","code":"ugd_test_pattern()"},{"path":"https://nx10.github.io/unigd/reference/ugd_test_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a test pattern that can be used to evaluate and compare graphics\ndevices. — ugd_test_pattern","text":"","code":"if (FALSE) {  ugd_test_pattern() }"},{"path":"https://nx10.github.io/unigd/reference/unigd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"unigd: Universal graphics device — unigd-package","title":"unigd: Universal graphics device — unigd-package","text":"Universal graphics device","code":""}]
